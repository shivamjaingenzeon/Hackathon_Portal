// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using hackathonbackend.Data;

#nullable disable

namespace hackathonbackend.Migrations
{
    [DbContext(typeof(HackathonDbContext))]
    [Migration("20230719210022_SecondMigration")]
    partial class SecondMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("hackathonbackend.Data.AuthenticationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsCompany")
                        .HasColumnType("boolean");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("AuthenticationUsers");
                });

            modelBuilder.Entity("hackathonbackend.Data.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AuthenticationUserId")
                        .HasColumnType("integer");

                    b.Property<string>("Contact")
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuthenticationUserId")
                        .IsUnique();

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("hackathonbackend.Data.Hackathon", b =>
                {
                    b.Property<int>("HackathonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("HackathonId"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("interval");

                    b.Property<string>("HackathonName")
                        .HasColumnType("text");

                    b.Property<int>("NumberOfMembers")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("interval");

                    b.HasKey("HackathonId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Hackathons");
                });

            modelBuilder.Entity("hackathonbackend.Data.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long>("AadharNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("CollegeName")
                        .HasColumnType("text");

                    b.Property<string>("Contact")
                        .HasColumnType("text");

                    b.Property<long>("ContactNumber")
                        .HasColumnType("bigint");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<char>("Gender")
                        .HasColumnType("character(1)");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .HasColumnType("text");

                    b.Property<string>("Skill")
                        .HasColumnType("text");

                    b.Property<int?>("TeamId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("hackathonbackend.Data.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AuthenticationUserId")
                        .HasColumnType("integer");

                    b.Property<string>("College")
                        .HasColumnType("text");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("integer");

                    b.Property<string>("Contact")
                        .HasColumnType("text");

                    b.Property<int?>("HackathonId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("NumberOfMembers")
                        .HasColumnType("integer");

                    b.Property<int?>("UserStoryId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AuthenticationUserId")
                        .IsUnique();

                    b.HasIndex("CompanyId");

                    b.HasIndex("HackathonId");

                    b.HasIndex("UserStoryId")
                        .IsUnique();

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("hackathonbackend.Data.UserStory", b =>
                {
                    b.Property<int>("UserStoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserStoryId"));

                    b.Property<string>("BackendTechnology")
                        .HasColumnType("text");

                    b.Property<string>("Database")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("FrontendTechnology")
                        .HasColumnType("text");

                    b.Property<int?>("HackathonId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsAssigned")
                        .HasColumnType("boolean");

                    b.Property<int?>("TeamId")
                        .HasColumnType("integer");

                    b.Property<string>("UserStoryName")
                        .HasColumnType("text");

                    b.HasKey("UserStoryId");

                    b.HasIndex("HackathonId");

                    b.ToTable("UserStories");
                });

            modelBuilder.Entity("hackathonbackend.Data.Company", b =>
                {
                    b.HasOne("hackathonbackend.Data.AuthenticationUser", "AuthenticationUser")
                        .WithOne()
                        .HasForeignKey("hackathonbackend.Data.Company", "AuthenticationUserId");

                    b.Navigation("AuthenticationUser");
                });

            modelBuilder.Entity("hackathonbackend.Data.Hackathon", b =>
                {
                    b.HasOne("hackathonbackend.Data.Company", "Company")
                        .WithMany("Hackathons")
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("hackathonbackend.Data.Member", b =>
                {
                    b.HasOne("hackathonbackend.Data.Team", "Team")
                        .WithMany("Members")
                        .HasForeignKey("TeamId");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("hackathonbackend.Data.Team", b =>
                {
                    b.HasOne("hackathonbackend.Data.AuthenticationUser", "AuthenticationUser")
                        .WithOne()
                        .HasForeignKey("hackathonbackend.Data.Team", "AuthenticationUserId");

                    b.HasOne("hackathonbackend.Data.Company", "Company")
                        .WithMany("Teams")
                        .HasForeignKey("CompanyId");

                    b.HasOne("hackathonbackend.Data.Hackathon", "Hackathon")
                        .WithMany("Teams")
                        .HasForeignKey("HackathonId");

                    b.HasOne("hackathonbackend.Data.UserStory", "UserStory")
                        .WithOne("Team")
                        .HasForeignKey("hackathonbackend.Data.Team", "UserStoryId");

                    b.Navigation("AuthenticationUser");

                    b.Navigation("Company");

                    b.Navigation("Hackathon");

                    b.Navigation("UserStory");
                });

            modelBuilder.Entity("hackathonbackend.Data.UserStory", b =>
                {
                    b.HasOne("hackathonbackend.Data.Hackathon", "Hackathon")
                        .WithMany("UserStories")
                        .HasForeignKey("HackathonId");

                    b.Navigation("Hackathon");
                });

            modelBuilder.Entity("hackathonbackend.Data.Company", b =>
                {
                    b.Navigation("Hackathons");

                    b.Navigation("Teams");
                });

            modelBuilder.Entity("hackathonbackend.Data.Hackathon", b =>
                {
                    b.Navigation("Teams");

                    b.Navigation("UserStories");
                });

            modelBuilder.Entity("hackathonbackend.Data.Team", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("hackathonbackend.Data.UserStory", b =>
                {
                    b.Navigation("Team");
                });
#pragma warning restore 612, 618
        }
    }
}
